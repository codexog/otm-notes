#+NAME: WORK_INTERVALS
| time interval        | activity  | days                 |
| <20>                 |           | <20>                 |
|----------------------+-----------+----------------------|
| <2019-11-29 Fri 11:00>--<2019-11-29 Fri 11:15> | Stage I   | 15 minutes           |
| <2019-11-29 Fri 12:30>--<2019-11-29 Fri 15:30> | Stage II  | 3 hours              |
| <2019-12-02 Mon 21:30>--<2019-12-02 Mon 22:30> | Stage III | 1 hour               |
| <2019-12-03 Tue 10:00>--<2019-12-03 Tue 12:30> | Stage III | 2 hours 30 minutes   |
| <2019-12-03 Tue 13:30>--<2019-12-03 Tue 13:55> | Stage III | 25 minutes           |
| <2019-12-04 Wed 11:00>--<2019-12-04 Wed 15:00> | Stage IV  | 4 hours              |
| <2019-12-05 Thu 11:00>--<2019-12-05 Thu 12:00> | Stage IV  | 1 hour               |
| <2019-12-05 Thu 13:00>--<2019-12-05 Thu 17:00> | Stage IV  | 4 hours              |
| <2019-12-06 Fri 17:00>--<2019-12-06 Fri 19:30> | Stage V   | 2 hours 30 minutes   |
| <2019-12-09 Mon 10:00>--<2019-12-09 Mon 13:00> | Stage V   | 3 hours              |
|----------------------+-----------+----------------------|
#+TBLFM: $3='(org-evaluate-time-range)

| TOTAL               |
| 16 hours 10 minutes |

* Project
** DONE Stage I
- [X] In document
  - [X] intended use
  - [X] tended functionality
- [X] Ti

** DONE Stage II
- [X] th contains a runnable executable
- [X] atof the basic functionality is implemented
- [X] thast one test
- [X] the of the repository is in order
  - [X] ew (purpose and intended use)
  - [X] rtaining to running and troubleshooting)
  - [X] n
  - [X] t relevant until last week
  - [X] interface to dev environment
  - [X] instead of JavaDoc I presume)
  - [X] (what is this for clojure? and how to run it)
- [X] thy is clean, i.e. contains no superfluous material
- [X] tito date
** DONE Stage III
- [X] Molity is implemented as compared to the previous stage
- [X] Thompiles' and the repository contains an up to date executable
- [X] Imng suite
  - [X]  new test
  - [X] le to generate a testcoverage report (jacoco for clojure?) excluding the gui code
  - [X]  is at least 20%
  - [X]  natural and meaningful
- [X] Que
  - [X] logic is sufficiently separated from ui code
  - [X] properly packaged (namespaces in clojure? how does this shit work?)
- [X] Ch
  - [X] s in use (except for ui code)
  - [X] der 10 checkstyle errors
- [X] Ar
  - [X] etailing the current architecture (UML if possible)
  - [X] etailing the current package structure (UML if possible)
  - [X] ion directory is present in the repository
  - [X] ry contains an architectural design document see [[https://github.com/mluukkai/OtmTodoApp/blob/master/dokumentaatio/arkkitehtuuri.md][example]]
- [X] Tito date
- [X] Ththe project is up to date
- [X] Tiy
** DONE Stage IV
- [X] The functionality detailed in the initial design document is implemented
- [X] Github
  - [X] The project is on github
  - [X] issues are permitted
  - [X] A github release of the project has been made [[https://github.com/mluukkai/ohjelmistotekniikka-kevat2019/blob/master/web/release.md][instructions]]
  - [X] A link to the github release is in the README
- [X] More functionality has been implemented or the implementation has been improved since the last stage
- [X] Testing (excluding ui code)
  - [X] It is possible to generate a testcoverage report (jacoco or similar)
  - [X] Line coverage is at least 40%
  - [X] The tests are meaningful and natural
- [X] Code quality
  - [X] Application logic is separated from ui code
  - [X] Packaging structure is meaningful
  - [X] Checkstyle, or similar, is in use
  - [X] The code base doesn't contain repetitive code
- [X] Documentation
  - [X] Documentation contains at least one sequence chart detailing a relevant sequence of logic performed by the application [[https://github.com/mluukkai/OtmTodoApp/blob/master/dokumentaatio/arkkitehtuuri.md#sovelluslogiikka][reference]]
  - [X] Add a chart to the architectural design document from the previous stage
  - [X] A link to the architecture document is in the README [[https://github.com/mluukkai/OtmTodoApp][reference]]
- [X] The README ([[https://github.com/mluukkai/OtmTodoApp][reference]])
  - [X] it contains a short description of the purpose and function of the project
  - [X] it contains links to the initial design, and architecture documents
  - [X] it contains a link to the timelog
  - [X] links to releases
  - [X] it details the command line interface to the project
  - [X] is up to date
- [X] The repository is clean
  - [X] no extra files
  - [X] a sane .gitignore file is present
- [X] Timelog is up to date
- [X] There is an up to date runnable executable in the repository
** TODO Stage V
- [-] Application
  - [X] It is possible to compile a working jar executable
  - [X] The executable version of the application has more functionality or the implementation is improved from the previous stage
  - [ ] A new release of the application has been made
- [X] Quality of Code
  - [X] The codebase is not repetitive
  - [X] The structure of the code is sane
- [X] Testing
  - [X] The testing suite is expanded compared to the previous stage
  - [X] The line coverage of tests is at least 60%
  - [X] The test are meaningful and natural
- [ ] Documentation
  - [ ] cljdoc
- [X] Architecture
  - [X] The repo contains an architectural design document [[https://github.com/mluukkai/OtmTodoApp/blob/master/dokumentaatio/arkkitehtuuri.md#sovelluslogiikka][reference]]
  - [X] with a span of ca. 1-2 pages
- [X] Manual
  - [X] An inital draft of how to use the program is in the repo, ca. 1 page [[https://github.com/mluukkai/OtmTodoApp/blob/master/dokumentaatio/kayttoohje.md][reference]] (see README)
- [X] Quality of code
  - [X] Packaging structure is meaningful
  - [X] Application logic is separated from ui code
  - [X] No style errors
- [-] Timelog
  - [X] Timelog is up to date
  - [ ] The total number of hours is written out
- [-] README [[https://github.com/mluukkai/OtmTodoApp][reference]]
  - [X] contains a short description of the project
  - [-] contains links to
    - [X] initial design document
    - [X] architectural design document
    - [ ] manual
    - [X] timelog
  - [ ] contains links to releases
  - [X] details the command line interface to
    - [X] run tests
    - [X] generate a test report
    - [X] generate a runnable executable (.jar)
    - [X] run a style check
    - [X] generate documentation
- [ ] Cleanup
  - [ ] no irrelevant files
  - [ ] reasonable .gitignore file
